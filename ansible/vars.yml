#
# SPDX-License-Identifier: Apache-2.0
#
---
# The type of K8S cluster this is using
target: k8s
arch: amd64

# The image and crd URLs
fabric_operator_image: ghcr.io/hyperledger-labs/fabric-operator
crd_url: https://github.com/hyperledger-labs/fabric-operator.git/config/crd

# tag version for crd and fabric operator
tag_version: 1.0.4

# name of the operator (it is used by delete function)
webhook: fabric-operator

# The Console URL will be constructed as follows:
#       https://{{ namespace }}-{{ console_name }}-console.{{ console_domain }}:443
#  e.g. https://fabricinfra-hlf-console-console.example.com:443

# k8s namespace for the operator and console
namespace: fabricinfra

# Console name/domain
console_name: hlf-console

# Console domain
console_domain: example.com

#  default configuration for the console
# password reset will be required on first login
console_email: admin
console_default_password: password

# different k8s clusters will be shipped with differently named default storage providers
# or none at all.  KIND for example has one called 'standard'
console_storage_class: standard
console_storage_size: 5Gi

# Console image and tag version
# Note: there is no tagging implemented for this service therefore we have to use label latest since it is the only available for now
console_image: ghcr.io/hyperledger-labs/fabric-console
console_image_label: latest

# Deployer image and tag version
deployer_image: ghcr.io/ibm-blockchain/fabric-deployer
deployer_image_label: latest-amd64

# Console init image
init_image: registry.access.redhat.com/ubi8/ubi-minimal
init_image_label: latest

# Fabric versions
fabric_version: 2.4.4
fabric_ca_version: 1.5.4
product_version: 2.5.0

############
# Flux2 vars
############

fluxcd:
  git_username: git
  # Configure git password or github PAT in the following format: ':patstring'
  # e.g. :superSecretPassword
  # configure git password field ONLY if protocol is https
  git_password: ""
  git_protocol: ssh
  # base64 encoded string:
  #   cat sshkey.pem | base64
  git_sshkey: LS0tLS1CRUd...
  # Needed in order to achieve successfull handshake when using ssh protocol. Needed algorithm is ecdsa-sha2-nistp256
  # this can be generated with:
  #   ssh-keyscan -f sshkey.pem github.com 2>&1 | grep ecdsa-sha2 | base64
  git_ssh_known_hosts: Z2l0aHViLmNvb...
  # possible options:
  #   if https protocol in use: git-auth
  #   if ssh protocol in use: git-ssh-key
  git_use_secret: git-ssh-key
  git_repo: github.com/organisation/repo.git
  git_branch: main
  network_docker_url: docker_url
  flux_namespace: flux

  versions:
    flux2: 2.5.1
    sync: 1.2.0
    notification: 1.6.0

  # Flux2
  flux2:
    installCRDs: true
    clusterDomain: cluster.local
    logLevel: info
    watchAllNamespaces: true
    rbac:
      create: true

  # sync
  sync:
    gitRepository:
      spec:
        secretRef:
          # the secret that is created by the helm
          name: "git-auth"
          # the secret that is created by the role
          nameSSH: "git-ssh-key"
        timeout: "200s"
        interval: "2m"
    secret:
      # -- Create a secret for the git repository. Defaults to false.
      create: false

      # -- Data of the secret.
      # For HTTPS repositories the secret must contain username and password fields.
      # For SSH repositories the secret must contain identity, identity.pub and known_hosts fields.
      # Values will be encoded to base64 by the helm chart.
      data: { }

      # -- Algorithm of keys to generate.
      # If `data` object above is empty, and `create` is set to true. The Chart will generate the
      # Git SSH key secret automatically based on the key algorithms that are set below.
      generate:
        sshKeyAlgorithm: ecdsa
        sshEcdsaCurve: p521

  # notifications
  notification:
  # -- A list of secrets to be used. See values.yaml for example
  # For help see: https://fluxcd.io/docs/components/notification/provider/
    secretlist: [ ]
      # - name: webhook-url
      #   value:
      #     stringData:
      #       headers: |
      #         Authorization: token
      #         X-Forwarded-Proto: https
      # - name: slack-token
      #   value:
      #     data:
    #       address: <BASE64>
    #       token: <BASE64>

    # -- A list of providers to be used. See values.yaml for example
    providerlist: [ ]
      # - name: on-call-slack
      #   spec:
      #     type: slack
      #     # (optional)
      #     channel: general
      #     # (optional)
      #     username: user
      #     # webhook address (ignored if secretRef is specified) (optional)
      #     address: https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
      #     # HTTP(S) proxy (optional)
      #     proxy: https://proxy.corp:8080
      #     # (optional)
      #     secretRef:
      #       name: webhook-url
      #     # (optional)
    #     certSecretRef:
    #       name: certref

    # -- A list of alerts to be used. See values.yaml for example
    alertlist: [ ]
      # - name: webapp
      #   spec:
      #     providerRef:
      #       name: on-call-slack
      #     eventSeverity: info
      #     eventSources:
      #     - kind: GitRepository
      #       name: webapp
      #     - kind: Bucket
      #       name: secrets
      #     - kind: Kustomization
      #       name: webapp-backend
      # - name: all-kustomizations
      #   spec:
      #     providerRef:
      #       name: dev-msteams
      #     eventSeverity: error
      #     eventSources:
      #       - kind: Kustomization
      #         namespace: default
    #         name: '*'
    #     suspend: false

###############################
# Nginx Ingress Controller vars
###############################
nginx:
  nginx_chart_version: 4.4.2
  cert_manager_chart_version: 1.10.0
  cert_manager_email: openidl@openidl.org
  controller_name: nginx-external

###############################
# Vault vars
###############################
vault:
  name: vault
  vault_namespace: vault
  vault_chart_version: 0.23.0
  vault_chart_repo: helm.releases.hashicorp.com
  internal_domain: vault.d1.test.openidl.org
  ingress_class: nginx-external
  env: test
  region: us-east-2
  network:
    org_name: d1
    ordererorg: false
    ordererorg_name: org_name
  aws_account_number: XXXXXXXXXXXX
  registry: ghcr.io/openidl-org/openidl-aais-gitops
  registry_version: latest
  aws_profile: git-actions-role
