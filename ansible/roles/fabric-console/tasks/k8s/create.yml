#
# SPDX-License-Identifier: Apache-2.0
#
---
- name: configuring aws
  shell: |
    export AWS_PROFILE=baf-role
  changed_when: false
  tags:
    - notest

- name: Fail if namespace not specified
  fail:
    msg: namespace not specified or is empty
  when: not console_namespace is defined or not console_namespace

- name: Determine if namespace exists
  k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ console_namespace }}"
  register: namespace_info

- name: Determine if console exists
  k8s_info:
    namespace: "{{ console_namespace }}"
    api_version: "ibp.com/v1alpha2"
    kind: IBPConsole
    name: "{{ console_name }}"
  register: existing_console

- name: Create console
  k8s:
    state: present
    namespace: "{{ console_namespace }}"
    resource_definition: "{{ lookup('template', 'k8s/hlf-operations-console.yaml.j2') }}"
    apply: yes
  register: create_console

- name: Wait for console deployment to exist
  k8s_info:
    namespace: "{{ console_namespace }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ console_name }}"
  register: console_deployment
  until: console_deployment.resources
  retries: "{{ wait_timeout }}"
  delay: 1

- name: Wait for console deployment to start
  k8s:
    state: present
    namespace: "{{ console_namespace }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ console_name }}"
    wait: yes
    wait_timeout: "{{ wait_timeout }}"
  changed_when: False

- name: "Patch ingress"
  k8s:
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: "{{ console_name }}"
        namespace: "{{ console_namespace }}"
        annotations:
          cert-manager.io/cluster-issuer: "{{console_cluster_issuer}}"
          kubernetes.io/ingress.class: "{{console_ingress_class}}"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      spec:
        ingressClassName: "{{console_ingress_class}}"
        tls:
        - hosts:
          - "{{ console_namespace }}-{{ console_name }}-console.{{ console_domain }}"
          secretName: "{{ console_namespace }}-{{ console_name }}-console-tls"
    merge_type: merge

- name: Pull vault access config, store it as secret
  include_tasks: "k8s/{{console_vault_cloud_deployment}}-vault-secret.yml"

- name: "Patch console vault secret"
  k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      state: patch
      metadata:
        name: "{{ console_name }}"
        namespace: "{{ console_namespace }}"
      spec:
        template:
          spec:
            containers:
              - name: optools
                volumeMounts:
                  - name: vault-secret
                    mountPath: /server/conf/vault
                    readOnly: true
            volumes:
              - name: vault-secret
                secret:
                  defaultMode: 420
                  secretName: "{{console_vault_secret_name}}"
    merge_type: strategic-merge

- name: Print console URL
  debug:
    msg: Operator console available at "https://{{ console_namespace }}-{{ console_name }}-console.{{ console_domain }}"
